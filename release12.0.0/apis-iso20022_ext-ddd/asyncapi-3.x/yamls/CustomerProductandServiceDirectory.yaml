asyncapi: 2.6.0
info:
  title: Customer Product and Service Directory
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This Service Domain
    maintains the most important details of all the products and services that a
    customer has acquired from the bank.
  version: 12.0.3
channels:
  CustomerProductAndServiceDirectoryEntry/Created:
      description: ''
      publish:
        operationId: CustomerProductAndServiceDirectoryEntry-created
        summary: CustomerProductAndServiceDirectoryEntry
        message:
          $ref: '#/components/messages/CustomerProductAndServiceDirectoryEntry'
  CustomerProductAndServiceDirectoryEntry/Updated:
      description: ''
      publish:
        operationId: CustomerProductAndServiceDirectoryEntry-updated
        summary: CustomerProductAndServiceDirectoryEntry
        message:
          $ref: '#/components/messages/CustomerProductAndServiceDirectoryEntry'
  Product/Created:
      description: ''
      publish:
        summary: Product
        message:
          $ref: '#/components/messages/Product'
  Product/Updated:
      description: ''
      publish:
        summary: Product
        message:
          $ref: '#/components/messages/Product'
  Service/Created:
      description: ''
      publish:
        summary: Service
        message:
          $ref: '#/components/messages/Service'
  Service/Updated:
      description: ''
      publish:
        summary: Service
        message:
          $ref: '#/components/messages/Service'
  CustomerProductsandServicesOutcome/Created:
      description: ''
      publish:
        summary: CustomerProductsandServicesOutcome
        message:
          $ref: '#/components/messages/CustomerProductsandServicesOutcome'
  CustomerProductsandServicesOutcome/Updated:
      description: ''
      publish:
        summary: CustomerProductsandServicesOutcome
        message:
          $ref: '#/components/messages/CustomerProductsandServicesOutcome'
  CustomerProductAndServiceDirectoryEntry/Notify:
      subscribe:
        message:
          $ref: '#/components/messages/CustomerProductAndServiceDirectoryEntryNotify'
  Product/Notify:
      subscribe:
        message:
          $ref: '#/components/messages/ProductNotify'
  Service/Notify:
      subscribe:
        message:
          $ref: '#/components/messages/ServiceNotify'
components:
  messages:
    CustomerProductAndServiceDirectoryEntry:
        name: CustomerProductAndServiceDirectoryEntry
        description: >-
          Capture and maintain reference information about some type of entitity
          within Customer Products and Services.
        payload:
          $ref: '#/components/schemas/CustomerProductAndServiceDirectoryEntry'
    Product:
        name: Product
        description: >-
          The In-force Product property properties that represent a discrete
          aspect of the In-force Product property
        payload:
          $ref: '#/components/schemas/Product'
    Service:
        name: Service
        description: >-
          The In-force Product property properties that represent a discrete
          aspect of the In-force Product property
        payload:
          $ref: '#/components/schemas/Service'
    CustomerProductsandServicesOutcome:
        name: CustomerProductsandServicesOutcome
        description: >-
          The In-force Product property properties that represent a discrete
          aspect of the In-force Product property
        payload:
          $ref: '#/components/schemas/CustomerProductsandServicesOutcome'
    CustomerProductAndServiceDirectoryEntryNotify:
        name: CustomerProductAndServiceDirectoryEntryNotify
        payload:
          $ref: '#/components/schemas/CustomerProductAndServiceDirectoryEntryNotify'
    ProductNotify:
        name: ProductNotify
        payload:
          $ref: '#/components/schemas/ProductNotify'
    ServiceNotify:
        name: ServiceNotify
        payload:
          $ref: '#/components/schemas/ServiceNotify'
  schemas:
    Product:
        type: object
        description: ''
        properties:
          ProductReference:
              $ref: '#/components/schemas/Identifier'
          ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
          ProductName:
              $ref: '#/components/schemas/Name'
          ProductPriority:
              $ref: '#/components/schemas/Text'
          ProductDescription:
              $ref: '#/components/schemas/Text'
          ProductType:
              enum:
                  -  LoanProduct
                  -  CurrentAccountProduct
                  -  SavingAccountProduct
                  -  BrokeredProduct
                  -  TermDepositProduct
          ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
          ProductVersion:
              $ref: '#/components/schemas/Text'
          ProductFeature:
              $ref: '#/components/schemas/ProductFeature'
    Identifier:
        type: object
        format: Identifier
        description: ' '
        properties:
          IdentifierValue:
              $ref: '#/components/schemas/Value'
          IdentifierIssuingAuthority:
              $ref: '#/components/schemas/Involvedparty'
          Identifier:
              type: string
              format: DataType
              description: >-
                An identifier is a character string used to uniquely identify
                one instance of an object within an identification scheme that
                is managed by an agency. (UN/CEFAT) 
          IdentifierStartDate:
              $ref: '#/components/schemas/Datetime'
          IdentifierEndDate:
              $ref: '#/components/schemas/Datetime'
    Value:
        type: object
        format: Value
        description: ' '
        properties:
          Value:
              type: string
              format: DataType
              description: >-
                Data or set of data 


                A value is the concept of worth in general that is assigned or
                is determined by measurement, assessment or calculation.
                (UN/CEFACT) 
    Involvedparty:
        type: object
        format: Involvedparty
        description: 'Entity that assigns and manages the identification. '
        properties:
          PartyReference:
              $ref: '#/components/schemas/Party'
          PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
          Involvedparty:
              type: string
              format: DataType
              description: 'Party who plays a specific role  '
    Party:
        type: object
        format: Party
        description: ' '
        properties:
          PartyName:
              $ref: '#/components/schemas/Name'
          PartyType:
              enum:
                  -  Person
                  -  Organisation
              format: Party
          PartyDateTime:
              $ref: '#/components/schemas/Datetime'
          PartyIdentification:
              $ref: '#/components/schemas/Partyidentification'
          PartyLegalStructureType:
              enum:
                  -  Individual
                  -  CommunityInterestCompany
                  -  Co-Operative
                  -  Charity
                  -  GeneralPartnership
                  -  LimitedLiabilityPartnership
                  -  ScottishLimitedPartnership
                  -  LimitedPartnership
                  -  PrivateLimitedCompany
                  -  PublicLimitedCompany
                  -  Sole(SoleTrader)
              format: Party
    Name:
        type: object
        format: Name
        description: ' '
        properties:
          Name:
              type: string
              format: DataType
              description: >-
                A name is a word or phrase that constitutes the distinctive
                designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
        type: object
        format: Datetime
        description: ' '
        properties:
          DateTimeContent:
              type: string
              format: String
              description: ''
          TimeZoneCode:
              type: string
              format: String
              description: ''
          DaylightSavingIndicator:
              type: string
              format: String
              description: ''
          Datetime:
              type: string
              format: DataType
              description: >-
                A date time identifies a date and time of day to various common
                resolutions: year, month, week, day, hour, minute, second, and
                fraction of second. (UN/CEFACT)


                A particular point in the progression of time defined by a
                mandatory date and a mandatory time component, expressed in
                either UTC time format (YYYY-MM-DDThh:mm:ss.sssZ), local time
                with UTC offset format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or
                local time format (YYYY-MM-DDThh:mm:ss.sss). These
                representations are defined in "XML Schema Part 2: Datatypes
                Second Edition W3C Recommendation 28 October 2004" which is
                aligned with ISO 8601. (ISO20022)

                Note on the time format:

                1) beginning / end of calendar day

                00:00:00  -  the beginning of a calendar day

                24:00:00  -  the end of a calendar day

                2) fractions of second in time format

                Decimal fractions of seconds may be included. In this case, the
                involved parties shall agree on the maximum number of digits
                that are allowed. 
    Partyidentification:
        type: object
        format: Partyidentification
        description: ' '
        properties:
          PartyIdentificationType:
              enum:
                  -  Taxidentificationnumber
                  -  Nationalregistrationnumber
                  -  LEI(LegalEntityIdentifier)
                  -  Alienregistrationnumber
                  -  Passportnumber
                  -  Corporateidentification
                  -  Driverlicensenumber
                  -  Socialsecuritynumber
                  -  Identitycardnumber
                  -  Concat
              format: Partyidentification
          PartyIdentification:
              $ref: '#/components/schemas/Identifier'
          Partyidentification:
              type: string
              format: DataType
              description: ''
    Partyrole:
        type: object
        format: Partyrole
        description: ' '
        properties:
          PartyRoleType:
              $ref: '#/components/schemas/Text'
          PartyRoleName:
              $ref: '#/components/schemas/Name'
          PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
          PartyInvolvementType:
              enum:
                  -  Agreementinvolvement
                  -  Partyinvolvement
                  -  Arrangementinvolvement
                  -  Relationshipinvolvement
                  -  Locationinvolvement
                  -  Bankguaranteeinvolvement
              format: Partyrole
    Text:
        type: object
        format: Text
        description: ' '
        properties:
          Text:
              type: string
              format: DataType
              description: >-
                Text is a character string such as a finite set of characters
                generally in the form of words of a language. (UN/CEFACT) 
    Datetimeperiod:
        type: object
        format: Datetimeperiod
        description: ' '
        properties:
          FromDateTime:
              $ref: '#/components/schemas/Datetime'
          ToDateTime:
              $ref: '#/components/schemas/Datetime'
          Datetimeperiod:
              type: string
              format: DataType
              description: >-
                Time span defined by a start date and time, and an end date and
                time. (ISO20022) 
    Productidentification:
        type: object
        format: Productidentification
        description: "The identifier of product e.g. ISIN Code. \r\n"
        properties:
          ProductIdentification:
              $ref: '#/components/schemas/Identifier'
          ProductIdentificationType:
              enum:
                  -  ISINCode
                  -  PackageCode
                  -  Buyersitemnumber
                  -  EAN
                  -  Harmonizedtariffcodename
                  -  Manufacturersitemnumber
                  -  Modelnumber
                  -  Partnumber
                  -  Quotacategory
                  -  Stylenumber
                  -  Suppliersitemnumber
                  -  Universalproductcode
              format: Productidentification
    Productlifecyclestatus:
        type: object
        format: Productlifecyclestatus
        description: "Refers to the lifecycle of a product (e.g., initiated, announced, active, obsolete, withdrawn). \r\n"
        properties:
          ProductLifecycleStatus:
              $ref: '#/components/schemas/Status'
          ProductLifecycleStatusType:
              enum:
                  -  Initiated
                  -  Announced
                  -  Sold
                  -  Obsolete
                  -  Active
              format: Productlifecyclestatus
    Status:
        type: object
        format: Status
        description: ' '
        properties:
          StatusReason:
              $ref: '#/components/schemas/Text'
          StatusDateTime:
              $ref: '#/components/schemas/Datetime'
          StatusValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
          StatusInvolvedParty:
              $ref: '#/components/schemas/Involvedparty'
    ProductFeature:
        type: object
        format: ProductFeature
        description: " \r\n"
        properties:
          ProductFeatureType:
              $ref: '#/components/schemas/Productfeaturetype'
          ProductFeatureSpecification:
              $ref: '#/components/schemas/Text'
    Productfeaturetype:
        type: object
        format: Productfeaturetype
        description: 'The type or category of product/service features '
        properties:
          ProductFeatureTypeValues:
              enum:
                  -  Bankingservice
                  -  Administrationservice
                  -  Accessservice
                  -  Pricefeature
              format: Productfeaturetype
    Service:
        type: object
        description: ''
        properties:
          ServiceReference:
              $ref: '#/components/schemas/Identifier'
          ServiceIdentification:
              $ref: '#/components/schemas/Identifier'
          ServiceDescription:
              $ref: '#/components/schemas/Text'
          ServiceType:
              enum:
                  -  ITService
                  -  AdministrativeService
                  -  SystemService
                  -  FinancialService
                  -  InformationService
                  -  BusinessService
          ServiceName:
              $ref: '#/components/schemas/Name'
          ServiceLifecycleStatus:
              $ref: '#/components/schemas/Status'
          ServiceFeature:
              $ref: '#/components/schemas/Feature'
    Feature:
        type: object
        format: Feature
        description: "A characteristic of service which refers 1) mainly to the function or condition of service. 2) to non-functional features like quality and security \r\n"
        properties:
          FeatureType:
              $ref: '#/components/schemas/Text'
          FeatureIdentification:
              $ref: '#/components/schemas/Identifier'
          FeatureName:
              $ref: '#/components/schemas/Name'
          FeatureLifecycleStatus:
              $ref: '#/components/schemas/Status'
          FeatureDescription:
              $ref: '#/components/schemas/Text'
    CustomerProductsandServicesOutcome:
        type: object
        description: ''
        properties:
          CustomerProductsandServicesEntry:
              $ref: '#/components/schemas/DirectoryEntry'
          CustomerProductsandServicesWorkProduct:
              $ref: '#/components/schemas/Workproduct'
    DirectoryEntry:
        type: object
        format: DirectoryEntry
        description: " \r\n"
        properties:
          DirectoryEntryDateType:
              enum:
                  -  OpenDate
                  -  RefreshDate
              format: DirectoryEntry
          DirectoryEntryDate:
              $ref: '#/components/schemas/Date'
          DirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
    Date:
        type: object
        format: Date
        description: ' '
        properties:
          DateContent:
              type: string
              format: String
              description: ''
    Workproduct:
        type: object
        format: Workproduct
        description: " \r\n"
        properties:
          WorkProductType:
              enum:
                  -  Document
                  -  WorkingPaper
                  -  ActivityLog
                  -  Form
                  -  File
                  -  MeetingSchedule
                  -  MeetingMinute
              format: Workproduct
          WorkProductIdentifoication:
              type: string
              format: String
              description: ''
    CustomerProductAndServiceDirectoryEntry:
        type: object
        description: ''
        properties:
          CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
          CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
          CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              format: Number
              description: >-
                The version of Customer Products And Services Directory Entry
                NumberNumber
                (https://www.iso20022.org/standardsrepository/type/Number)StandardISO20022
                BM ()
          CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
          CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
          CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
          CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
          CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
          ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
          ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
          ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
    Schedule:
        type: object
        format: Schedule
        description: "The timetable to capture and maintain Customer Products And Services Directory Entry \r\n"
        properties:
          ScheduleType:
              type: string
              format: String
              description: ''
    Log:
        type: object
        format: Log
        description: "Reference to the log of (update) ativities/events of Customer Products And Services Directory Entry \r\n"
        properties:
          LogType:
              type: string
              format: String
              description: ''
          LogPeriod:
              type: string
              format: String
              description: ''
          LogDate:
              type: string
              format: String
              description: 'Key dates associated with the log (e.g. start time). '
          LogIdentification:
              type: string
              format: String
              description: ''
          Log:
              type: string
              format: Class
              description: 
                A record of events/entries.
                 
    ProductAgreement:
        type: object
        format: ProductAgreement
        description: " \r\n"
        properties:
          Type:
              enum:
                  -  CurrentAccountAgreement
                  -  SavingsAccountAgreement
                  -  BrokeredProductAgreement
                  -  ConsumerLoanAgreement
                  -  MortgageLoanAgreement
                  -  DirectDebitServiceAgreement
              format: ProductAgreement
          ProductReference:
              $ref: '#/components/schemas/Bankingproduct'
          AgreementReference:
              $ref: '#/components/schemas/Agreement'
    Bankingproduct:
        type: object
        format: Bankingproduct
        description: ' '
        properties:
          ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
          ProductType:
              enum:
                  -  LoanProduct
                  -  CurrentAccountProduct
                  -  SavingAccountProduct
                  -  BrokeredProduct
                  -  TermDepositProduct
              format: Bankingproduct
          ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
          ProductPriority:
              $ref: '#/components/schemas/Text'
          ProductDescription:
              $ref: '#/components/schemas/Text'
          ProductVersion:
              $ref: '#/components/schemas/Text'
          ProductName:
              $ref: '#/components/schemas/Name'
    Agreement:
        type: object
        format: Agreement
        description: ' '
        properties:
          AgreementSignedDate:
              $ref: '#/components/schemas/Date'
          AgreementType:
              enum:
                  -  CustomerAgreement
                  -  SupplierAgreement
                  -  BrokerAgreement
                  -  SalesAgreement
                  -  PurchaseAgreement
                  -  MaintenanceAgreement
                  -  ProductAgreement
                  -  ProductSalesAgreement
                  -  ResourceAgreement
              format: Agreement
          AgreementValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
          AgreementVersion:
              $ref: '#/components/schemas/Text'
          AgreementStatus:
              $ref: '#/components/schemas/Agreementlifecyclestatus'
          AgreementSubjectMatter:
              $ref: '#/components/schemas/Text'
          AgreementIdentification:
              $ref: '#/components/schemas/Identifier'
          AgreementDate:
              $ref: '#/components/schemas/Datetime'
          AgreementDescription:
              $ref: '#/components/schemas/Text'
          Agreement:
              type: string
              format: Class
              description: >-
                A formal or informal common understanding between two or more
                (legal competent) parties concerning one or more subject matters
                expressed in a set of arrangements, terms and conditions.
                (adapted from Legal System and FIBO)  
    Agreementlifecyclestatus:
        type: object
        format: Agreementlifecyclestatus
        description: >-
          A characteristic of agreement which refers to the LifecycleStatus of
          agreement (e.g., potential, offered, confirmed, completed, signed,
          terminated). 
        properties:
          AgreementLifecycleStatus:
              $ref: '#/components/schemas/Status'
          AgreementLifecycleStatusType:
              enum:
                  -  Offered
                  -  Confirmed
                  -  Completed
                  -  Signed
                  -  Terminated
                  -  Rejected
              format: Agreementlifecyclestatus
    ServiceAgreement:
        type: object
        format: ServiceAgreement
        description: " \r\n"
        properties:
          Type:
              $ref: '#/components/schemas/Text'
          ServiceReference:
              $ref: '#/components/schemas/Service'
          AgreementReference:
              $ref: '#/components/schemas/Agreement'
    CustomerProductAndServiceDirectoryEntryNotify:
        type: object
        description: ''
        properties:
          CustomerProductAndServiceDirectoryEntryDescription:
              $ref: '#/components/schemas/Text'
          CustomerProductAndServiceDirectoryEntrySchedule:
              $ref: '#/components/schemas/Schedule'
          CustomerProductAndServiceDirectoryEntryVersion:
              type: string
              format: Number
              description: >-
                The version of Customer Products And Services Directory Entry
                NumberNumber
                (https://www.iso20022.org/standardsrepository/type/Number)StandardISO20022
                BM ()
          CustomerProductAndServiceDirectoryEntryStatus:
              $ref: '#/components/schemas/Status'
          CustomerProductAndServiceDirectoryEntryUsageLog:
              $ref: '#/components/schemas/Log'
          CustomerProductAndServiceDirectoryEntryUpdateLog:
              $ref: '#/components/schemas/Log'
          CustomerProductAndServiceDirectoryEntryServiceConfiguration:
              $ref: '#/components/schemas/Text'
          CustomerProductAndServiceDirectoryEntryReference:
              $ref: '#/components/schemas/Identifier'
          CustomerReference:
              $ref: '#/components/schemas/Involvedparty'
          ProductAgreementReference:
              $ref: '#/components/schemas/ProductAgreement'
          ServicerReference:
              $ref: '#/components/schemas/Involvedparty'
          ServiceAgreementReference:
              $ref: '#/components/schemas/ServiceAgreement'
    ProductNotify:
        type: object
        description: ''
        properties:
          ProductReference:
              $ref: '#/components/schemas/Identifier'
          ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
          ProductName:
              $ref: '#/components/schemas/Name'
          ProductPriority:
              $ref: '#/components/schemas/Text'
          ProductDescription:
              $ref: '#/components/schemas/Text'
          ProductType:
              enum:
                  -  LoanProduct
                  -  CurrentAccountProduct
                  -  SavingAccountProduct
                  -  BrokeredProduct
                  -  TermDepositProduct
          ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
          ProductVersion:
              $ref: '#/components/schemas/Text'
          ProductFeature:
              $ref: '#/components/schemas/ProductFeature'
    ServiceNotify:
        type: object
        description: ''
        properties:
          ServiceReference:
              $ref: '#/components/schemas/Identifier'
          ServiceIdentification:
              $ref: '#/components/schemas/Identifier'
          ServiceDescription:
              $ref: '#/components/schemas/Text'
          ServiceType:
              enum:
                  -  ITService
                  -  AdministrativeService
                  -  SystemService
                  -  FinancialService
                  -  InformationService
                  -  BusinessService
          ServiceName:
              $ref: '#/components/schemas/Name'
          ServiceLifecycleStatus:
              $ref: '#/components/schemas/Status'
          ServiceFeature:
              $ref: '#/components/schemas/Feature'
