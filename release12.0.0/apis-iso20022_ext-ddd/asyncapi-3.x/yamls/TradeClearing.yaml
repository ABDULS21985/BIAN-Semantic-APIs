asyncapi: 2.6.0
info:
  title: Trade Clearing
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | This Service Domain
    handles the back office processes that confirm and notify interested parties
    that securities and funds are available as traded in anticipation of
    settlement processing
  version: 12.0.3
channels:
  TradeClearingProcedure/Created:
      description: ''
      publish:
        operationId: TradeClearingProcedure-created
        summary: TradeClearingProcedure
        message:
          $ref: '#/components/messages/TradeClearingProcedure'
  TradeClearingProcedure/Updated:
      description: ''
      publish:
        operationId: TradeClearingProcedure-updated
        summary: TradeClearingProcedure
        message:
          $ref: '#/components/messages/TradeClearingProcedure'
  MarketTradeFundsandSecurityAvailabilityAssurance/Created:
      description: ''
      publish:
        summary: MarketTradeFundsandSecurityAvailabilityAssurance
        message:
          $ref: >-
            #/components/messages/MarketTradeFundsandSecurityAvailabilityAssurance
  MarketTradeFundsandSecurityAvailabilityAssurance/Updated:
      description: ''
      publish:
        summary: MarketTradeFundsandSecurityAvailabilityAssurance
        message:
          $ref: >-
            #/components/messages/MarketTradeFundsandSecurityAvailabilityAssurance
  MarketTradeOutTradeResolution/Created:
      description: ''
      publish:
        summary: MarketTradeOutTradeResolution
        message:
          $ref: '#/components/messages/MarketTradeOutTradeResolution'
  MarketTradeOutTradeResolution/Updated:
      description: ''
      publish:
        summary: MarketTradeOutTradeResolution
        message:
          $ref: '#/components/messages/MarketTradeOutTradeResolution'
  MarketTradeSettlementInitiation/Created:
      description: ''
      publish:
        summary: MarketTradeSettlementInitiation
        message:
          $ref: '#/components/messages/MarketTradeSettlementInitiation'
  MarketTradeSettlementInitiation/Updated:
      description: ''
      publish:
        summary: MarketTradeSettlementInitiation
        message:
          $ref: '#/components/messages/MarketTradeSettlementInitiation'
  MarketTradeMatching/Created:
      description: ''
      publish:
        summary: MarketTradeMatching
        message:
          $ref: '#/components/messages/MarketTradeMatching'
  MarketTradeMatching/Updated:
      description: ''
      publish:
        summary: MarketTradeMatching
        message:
          $ref: '#/components/messages/MarketTradeMatching'
  TradeClearingOutcome/Created:
      description: ''
      publish:
        summary: TradeClearingOutcome
        message:
          $ref: '#/components/messages/TradeClearingOutcome'
  TradeClearingOutcome/Updated:
      description: ''
      publish:
        summary: TradeClearingOutcome
        message:
          $ref: '#/components/messages/TradeClearingOutcome'
  MarketTradeConfirmation/Created:
      description: ''
      publish:
        summary: MarketTradeConfirmation
        message:
          $ref: '#/components/messages/MarketTradeConfirmation'
  MarketTradeConfirmation/Updated:
      description: ''
      publish:
        summary: MarketTradeConfirmation
        message:
          $ref: '#/components/messages/MarketTradeConfirmation'
  TradeClearingProcedure/Notify:
      subscribe:
        message:
          $ref: '#/components/messages/TradeClearingProcedureNotify'
  MarketTradeConfirmation/Notify:
      subscribe:
        message:
          $ref: '#/components/messages/MarketTradeConfirmationNotify'
  MarketTradeFundsandSecurityAvailabilityAssurance/Notify:
      subscribe:
        message:
          $ref: >-
            #/components/messages/MarketTradeFundsandSecurityAvailabilityAssuranceNotify
  MarketTradeMatching/Notify:
      subscribe:
        message:
          $ref: '#/components/messages/MarketTradeMatchingNotify'
  MarketTradeOutTradeResolution/Notify:
      subscribe:
        message:
          $ref: '#/components/messages/MarketTradeOutTradeResolutionNotify'
  MarketTradeSettlementInitiation/Notify:
      subscribe:
        message:
          $ref: '#/components/messages/MarketTradeSettlementInitiationNotify'
components:
  messages:
    TradeClearingProcedure:
        name: TradeClearingProcedure
        description: >-
          Complete work tasks following a defined procedure in support of
          general office activities and product and service delivery within
          Trade Clearing. 
        payload:
          $ref: '#/components/schemas/TradeClearingProcedure'
    MarketTradeFundsandSecurityAvailabilityAssurance:
        name: MarketTradeFundsandSecurityAvailabilityAssurance
        description: >-
          A course of action for doing Market Trade Funds and Security
          Availability Assurance Workstep in the context of executing the Market
          Trade Funds and Security Availability Assurance Workstep
        payload:
          $ref: >-
            #/components/schemas/MarketTradeFundsandSecurityAvailabilityAssurance
    MarketTradeOutTradeResolution:
        name: MarketTradeOutTradeResolution
        description: >-
          A course of action for doing Market Trade Funds and Security
          Availability Assurance Workstep in the context of executing the Market
          Trade Funds and Security Availability Assurance Workstep
        payload:
          $ref: '#/components/schemas/MarketTradeOutTradeResolution'
    MarketTradeSettlementInitiation:
        name: MarketTradeSettlementInitiation
        description: >-
          A course of action for doing Market Trade Funds and Security
          Availability Assurance Workstep in the context of executing the Market
          Trade Funds and Security Availability Assurance Workstep
        payload:
          $ref: '#/components/schemas/MarketTradeSettlementInitiation'
    MarketTradeMatching:
        name: MarketTradeMatching
        description: >-
          A course of action for doing Market Trade Funds and Security
          Availability Assurance Workstep in the context of executing the Market
          Trade Funds and Security Availability Assurance Workstep
        payload:
          $ref: '#/components/schemas/MarketTradeMatching'
    TradeClearingOutcome:
        name: TradeClearingOutcome
        description: >-
          A course of action for doing Market Trade Funds and Security
          Availability Assurance Workstep in the context of executing the Market
          Trade Funds and Security Availability Assurance Workstep
        payload:
          $ref: '#/components/schemas/TradeClearingOutcome'
    MarketTradeConfirmation:
        name: MarketTradeConfirmation
        description: >-
          A course of action for doing Market Trade Funds and Security
          Availability Assurance Workstep in the context of executing the Market
          Trade Funds and Security Availability Assurance Workstep
        payload:
          $ref: '#/components/schemas/MarketTradeConfirmation'
    TradeClearingProcedureNotify:
        name: TradeClearingProcedureNotify
        payload:
          $ref: '#/components/schemas/TradeClearingProcedureNotify'
    MarketTradeConfirmationNotify:
        name: MarketTradeConfirmationNotify
        payload:
          $ref: '#/components/schemas/MarketTradeConfirmationNotify'
    MarketTradeFundsandSecurityAvailabilityAssuranceNotify:
        name: MarketTradeFundsandSecurityAvailabilityAssuranceNotify
        payload:
          $ref: >-
            #/components/schemas/MarketTradeFundsandSecurityAvailabilityAssuranceNotify
    MarketTradeMatchingNotify:
        name: MarketTradeMatchingNotify
        payload:
          $ref: '#/components/schemas/MarketTradeMatchingNotify'
    MarketTradeOutTradeResolutionNotify:
        name: MarketTradeOutTradeResolutionNotify
        payload:
          $ref: '#/components/schemas/MarketTradeOutTradeResolutionNotify'
    MarketTradeSettlementInitiationNotify:
        name: MarketTradeSettlementInitiationNotify
        payload:
          $ref: '#/components/schemas/MarketTradeSettlementInitiationNotify'
  schemas:
    MarketTradeFundsandSecurityAvailabilityAssurance:
        type: object
        description: ''
        properties:
          Preconditions:
              $ref: '#/components/schemas/Condition'
          BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
          Schedule:
              $ref: '#/components/schemas/Schedule'
          BusinessService:
              $ref: '#/components/schemas/BusinessService'
          Postconditions:
              $ref: '#/components/schemas/Condition'
          TradeClearingProcedureReference:
              $ref: '#/components/schemas/Procedure'
          MarketTradeFundsandSecurityAvailabilityAssuranceWorkstepReference:
              $ref: '#/components/schemas/Workstep'
          MarketTradeFundsandSecurityAvailabilityAssuranceWorkstepType:
              $ref: '#/components/schemas/Text'
    Condition:
        type: object
        format: Condition
        description: "The completion status and reference to subsequent actions that may be triggered on completion of the workstep \r\n"
        properties:
          Condition:
              type: string
              format: Class
              description: >-
                Condition is a premise upon which the fulfillment of an
                agreement depends 


                General and special arrangements, provisions, requirements,
                rules, specifications, and standards that form an integral part
                of an agreement or contract.


                Read more:
                http://www.businessdictionary.com/definition/terms-and-conditions.html

                 
    Involvedparty:
        type: object
        format: Involvedparty
        description: 'Entity that assigns and manages the identification. '
        properties:
          PartyReference:
              $ref: '#/components/schemas/Party'
          Involvedparty:
              type: string
              format: DataType
              description: 'Party who plays a specific role  '
          PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
    Party:
        type: object
        format: Party
        description: ' '
        properties:
          PartyName:
              $ref: '#/components/schemas/Name'
          PartyType:
              enum:
                  -  Person
                  -  Organisation
              format: Party
          PartyDateTime:
              $ref: '#/components/schemas/Datetime'
          PartyIdentification:
              $ref: '#/components/schemas/Partyidentification'
          PartyLegalStructureType:
              enum:
                  -  Individual
                  -  CommunityInterestCompany
                  -  Co-Operative
                  -  Charity
                  -  GeneralPartnership
                  -  LimitedLiabilityPartnership
                  -  ScottishLimitedPartnership
                  -  LimitedPartnership
                  -  PrivateLimitedCompany
                  -  PublicLimitedCompany
                  -  Sole(SoleTrader)
              format: Party
    Name:
        type: object
        format: Name
        description: ' '
        properties:
          Name:
              type: string
              format: DataType
              description: >-
                A name is a word or phrase that constitutes the distinctive
                designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
        type: object
        format: Datetime
        description: ' '
        properties:
          DateTimeContent:
              type: string
              format: String
              description: ''
          TimeZoneCode:
              type: string
              format: String
              description: ''
          DaylightSavingIndicator:
              type: string
              format: String
              description: ''
          Datetime:
              type: string
              format: DataType
              description: >-
                A date time identifies a date and time of day to various common
                resolutions: year, month, week, day, hour, minute, second, and
                fraction of second. (UN/CEFACT)


                A particular point in the progression of time defined by a
                mandatory date and a mandatory time component, expressed in
                either UTC time format (YYYY-MM-DDThh:mm:ss.sssZ), local time
                with UTC offset format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or
                local time format (YYYY-MM-DDThh:mm:ss.sss). These
                representations are defined in "XML Schema Part 2: Datatypes
                Second Edition W3C Recommendation 28 October 2004" which is
                aligned with ISO 8601. (ISO20022)

                Note on the time format:

                1) beginning / end of calendar day

                00:00:00  -  the beginning of a calendar day

                24:00:00  -  the end of a calendar day

                2) fractions of second in time format

                Decimal fractions of seconds may be included. In this case, the
                involved parties shall agree on the maximum number of digits
                that are allowed. 
    Partyidentification:
        type: object
        format: Partyidentification
        description: ' '
        properties:
          PartyIdentificationType:
              enum:
                  -  Taxidentificationnumber
                  -  Nationalregistrationnumber
                  -  LEI(LegalEntityIdentifier)
                  -  Alienregistrationnumber
                  -  Passportnumber
                  -  Corporateidentification
                  -  Driverlicensenumber
                  -  Socialsecuritynumber
                  -  Identitycardnumber
                  -  Concat
              format: Partyidentification
          PartyIdentification:
              $ref: '#/components/schemas/Identifier'
          Partyidentification:
              type: string
              format: DataType
              description: ''
    Identifier:
        type: object
        format: Identifier
        description: ' '
        properties:
          IdentifierValue:
              $ref: '#/components/schemas/Value'
          IdentifierIssuingAuthority:
              $ref: '#/components/schemas/Involvedparty'
          IdentifierStartDate:
              $ref: '#/components/schemas/Datetime'
          IdentifierEndDate:
              $ref: '#/components/schemas/Datetime'
          Identifier:
              type: string
              format: DataType
              description: >-
                An identifier is a character string used to uniquely identify
                one instance of an object within an identification scheme that
                is managed by an agency. (UN/CEFAT) 
    Value:
        type: object
        format: Value
        description: ' '
        properties:
          Value:
              type: string
              format: DataType
              description: >-
                Data or set of data 


                A value is the concept of worth in general that is assigned or
                is determined by measurement, assessment or calculation.
                (UN/CEFACT) 
    Partyrole:
        type: object
        format: Partyrole
        description: ' '
        properties:
          PartyRoleType:
              $ref: '#/components/schemas/Text'
          PartyRoleName:
              $ref: '#/components/schemas/Name'
          PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
          PartyInvolvementType:
              enum:
                  -  Agreementinvolvement
                  -  Partyinvolvement
                  -  Arrangementinvolvement
                  -  Relationshipinvolvement
                  -  Locationinvolvement
                  -  Bankguaranteeinvolvement
              format: Partyrole
    Text:
        type: object
        format: Text
        description: "The type of Market Trade Funds and Security Availability Assurance Workstep \r\n"
        properties:
          Text:
              type: string
              format: DataType
              description: >-
                Text is a character string such as a finite set of characters
                generally in the form of words of a language. (UN/CEFACT) 
    Datetimeperiod:
        type: object
        format: Datetimeperiod
        description: ' '
        properties:
          FromDateTime:
              $ref: '#/components/schemas/Datetime'
          ToDateTime:
              $ref: '#/components/schemas/Datetime'
          Datetimeperiod:
              type: string
              format: DataType
              description: >-
                Time span defined by a start date and time, and an end date and
                time. (ISO20022) 
    Schedule:
        type: object
        format: Schedule
        description: 'Timetable to process something (most refers to the Asset Type) '
        properties:
          ScheduleType:
              type: string
              format: String
              description: ''
    BusinessService:
        type: object
        format: BusinessService
        description: "The Market Trade Funds and Security Availability Assurance Workstep specific Business Service \r\n"
        properties:
          BusinessServiceType:
              enum:
                  -  Businessservicetypevalues
              format: BusinessService
    Procedure:
        type: object
        format: Procedure
        description: "Reference to Market Trade Funds and Security Availability Assurance Workstep \r\n"
        properties:
          ProcedureType:
              enum:
                  -  Proceduretypevalues
              format: Procedure
          ProcedureDateTime:
              $ref: '#/components/schemas/Datetime'
          ProcedureRequest:
              $ref: '#/components/schemas/Instruction'
          ProcedureSchedule:
              $ref: '#/components/schemas/Schedule'
          ProcedureStatus:
              $ref: '#/components/schemas/Status'
    Instruction:
        type: object
        format: Instruction
        description: 'Request to process something (most refers to Asset Type) '
        properties:
          InstructionDate:
              $ref: '#/components/schemas/Instructiondate'
          InstructionStatus:
              $ref: '#/components/schemas/Instructionlifecyclestatus'
          InstructionIdentifier:
              $ref: '#/components/schemas/Instructionidentification'
          InstructionType:
              enum:
                  -  PaymentInstruction
                  -  DeliveryOrder
                  -  InformationRequest
                  -  ExchangeInstruction
                  -  AllocationInstruction
                  -  MaintenanceInstruction
              format: Instruction
          InstructionResult:
              $ref: '#/components/schemas/Text'
          InstructionDescription:
              $ref: '#/components/schemas/Text'
          InstructionLog:
              $ref: '#/components/schemas/Log'
          InstructionPurpose:
              $ref: '#/components/schemas/Text'
    Instructiondate:
        type: object
        format: Instructiondate
        description: ' '
        properties:
          InstructionDate:
              $ref: '#/components/schemas/Date'
          InstructionDateType:
              enum:
                  -  DueDate
                  -  ExecutionDate
                  -  FulfillmentDate
              format: Instructiondate
    Date:
        type: object
        format: Date
        description: ' '
        properties:
          DateContent:
              type: string
              format: String
              description: ''
    Instructionlifecyclestatus:
        type: object
        format: Instructionlifecyclestatus
        description: >-
          A characteristic of instruction which refers to the LifecycleStatus of
          instruction (e.g., requested, executed, fulfilled, etc.);  
        properties:
          InstructionLifecycleStatusType:
              enum:
                  -  Requested
                  -  Prepared
                  -  InProgress
                  -  Fulfilled
                  -  OnHold
                  -  Failed
              format: Instructionlifecyclestatus
          InstructionLifecycleStatus:
              $ref: '#/components/schemas/Status'
    Status:
        type: object
        format: Status
        description: ' '
        properties:
          StatusReason:
              $ref: '#/components/schemas/Text'
          StatusDateTime:
              $ref: '#/components/schemas/Datetime'
          StatusValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
          StatusInvolvedParty:
              $ref: '#/components/schemas/Involvedparty'
          Status:
              type: string
              format: DataType
              description: >-
                A characteristic that describe the object by referring to a
                state transition in its lifecycle. 
    Instructionidentification:
        type: object
        format: Instructionidentification
        description: >-
          An identifier that allows to uniquely refer to an instance of an
          Instruction.
           
        properties:
          InstructionIdentifier:
              $ref: '#/components/schemas/Identifier'
          InstructionIdentifierType:
              enum:
                  -  OrderNumber
                  -  InstructionNumber
              format: Instructionidentification
    Log:
        type: object
        format: Log
        description: ' '
        properties:
          LogType:
              type: string
              format: String
              description: ''
          LogPeriod:
              type: string
              format: String
              description: ''
          LogDate:
              type: string
              format: String
              description: 'Key dates associated with the log (e.g. start time). '
          LogIdentification:
              type: string
              format: String
              description: ''
    Workstep:
        type: object
        format: Workstep
        description: "Reference to Market Trade Funds and Security Availability Assurance Workstep \r\n"
        properties:
          WorkstepResult:
              $ref: '#/components/schemas/Text'
          WorkstepType:
              enum:
                  -  Worksteptypevalues
              format: Workstep
          WorkstepDescription:
              $ref: '#/components/schemas/Text'
          WorkstepDateTime:
              $ref: '#/components/schemas/Datetime'
          WorkstepStatus:
              $ref: '#/components/schemas/Status'
    MarketTradeOutTradeResolution:
        type: object
        description: ''
        properties:
          Preconditions:
              $ref: '#/components/schemas/Condition'
          BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
          Schedule:
              $ref: '#/components/schemas/Schedule'
          BusinessService:
              $ref: '#/components/schemas/BusinessService'
          Postconditions:
              $ref: '#/components/schemas/Condition'
          TradeClearingProcedureReference:
              $ref: '#/components/schemas/Procedure'
          MarketTradeOutTradeResolutionWorkstepReference:
              $ref: '#/components/schemas/Workstep'
          MarketTradeOutTradeResolutionWorkstepType:
              $ref: '#/components/schemas/Text'
    MarketTradeSettlementInitiation:
        type: object
        description: ''
        properties:
          Preconditions:
              $ref: '#/components/schemas/Condition'
          BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
          Schedule:
              $ref: '#/components/schemas/Schedule'
          BusinessService:
              $ref: '#/components/schemas/BusinessService'
          Postconditions:
              $ref: '#/components/schemas/Condition'
          TradeClearingProcedureReference:
              $ref: '#/components/schemas/Procedure'
          MarketTradeSettlementInitiationWorkstepReference:
              $ref: '#/components/schemas/Workstep'
          MarketTradeSettlementInitiationWorkstepType:
              $ref: '#/components/schemas/Text'
    MarketTradeMatching:
        type: object
        description: ''
        properties:
          Preconditions:
              $ref: '#/components/schemas/Condition'
          BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
          Schedule:
              $ref: '#/components/schemas/Schedule'
          BusinessService:
              $ref: '#/components/schemas/BusinessService'
          Postconditions:
              $ref: '#/components/schemas/Condition'
          TradeClearingProcedureReference:
              $ref: '#/components/schemas/Procedure'
          MarketTradeMatchingWorkstepReference:
              $ref: '#/components/schemas/Workstep'
          MarketTradeMatchingWorkstepType:
              $ref: '#/components/schemas/Text'
    TradeClearingOutcome:
        type: object
        description: ''
        properties:
          TradeClearingWorkProduct:
              $ref: '#/components/schemas/Workproduct'
          TradeClearingProcedure:
              $ref: '#/components/schemas/Procedure'
    Workproduct:
        type: object
        format: Workproduct
        description: " \r\n"
        properties:
          WorkProductType:
              enum:
                  -  Document
                  -  WorkingPaper
                  -  ActivityLog
                  -  Form
                  -  File
                  -  MeetingSchedule
                  -  MeetingMinute
              format: Workproduct
          WorkProductIdentifoication:
              type: string
              format: String
              description: ''
    MarketTradeConfirmation:
        type: object
        description: ''
        properties:
          Preconditions:
              $ref: '#/components/schemas/Condition'
          BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
          Schedule:
              $ref: '#/components/schemas/Schedule'
          BusinessService:
              $ref: '#/components/schemas/BusinessService'
          Postconditions:
              $ref: '#/components/schemas/Condition'
          TradeClearingProcedureReference:
              $ref: '#/components/schemas/Procedure'
          MarketTradeConfirmationWorkstepReference:
              $ref: '#/components/schemas/Workstep'
          MarketTradeConfirmationWorkstepType:
              $ref: '#/components/schemas/Text'
    TradeClearingProcedure:
        type: object
        description: ''
        properties:
          TradeClearingProcedureParameterType:
              $ref: '#/components/schemas/Text'
          TradeClearingProcedureSelectedOption:
              $ref: '#/components/schemas/Feature'
          TradeClearingProcedureRequest:
              $ref: '#/components/schemas/Instruction'
          TradeClearingProcedureSchedule:
              $ref: '#/components/schemas/Schedule'
          TradeClearingProcedureStatus:
              $ref: '#/components/schemas/Status'
          TradeClearingProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
          TradeClearingProcedureBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
          TradeClearingProcedureServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
          TradeClearingProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/FinancialFacility'
          TradeClearingProcedureEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
          TradeClearingProcedureCustomerReference:
              $ref: '#/components/schemas/Involvedparty'
          TradeClearingProcedureType:
              $ref: '#/components/schemas/Proceduretype'
          TradeClearingProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/Schedule'
          TradeClearingProcedureServiceType:
              $ref: '#/components/schemas/Servicetype'
          TradeClearingProcedureProductandServiceType:
              $ref: '#/components/schemas/Bankingproducttype'
          TradeClearingProcedureProductandServiceInstance:
              $ref: '#/components/schemas/BankingProduct'
          TradeClearingProcedureTransactionType:
              $ref: '#/components/schemas/Transactiontype'
          TradeClearingProcedureTransaction:
              $ref: '#/components/schemas/Transaction'
          TradeClearingProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/Arrangement'
          TradeClearingProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/Agreement'
          TradeClearingProcedureReference:
              $ref: '#/components/schemas/Procedure'
    Feature:
        type: object
        format: Feature
        description: "A selected optional business service as subject matter of Trade Clearing Procedure \r\n"
        properties:
          FeatureType:
              $ref: '#/components/schemas/Text'
          FeatureIdentification:
              $ref: '#/components/schemas/Identifier'
          FeatureName:
              $ref: '#/components/schemas/Name'
          FeatureLifecycleStatus:
              $ref: '#/components/schemas/Status'
          FeatureDescription:
              $ref: '#/components/schemas/Text'
    FinancialFacility:
        type: object
        format: FinancialFacility
        description: "Reference to the Financial Facility related to Trade Clearing Procedure \r\n"
        properties:
          FinancialFacility:
              type: string
              format: Class
              description: >-
                A production or operational capacity to perform a business
                function for delivering a banking product or service


                A functional classification of banking product that provides
                ongoing capacity to deliver financial services (e.g. loan
                service, payment service)


                 
    Proceduretype:
        type: object
        format: Proceduretype
        description: "A Classification value that distinguishes between the type of process undertaken within Trade Clearing Procedure \r\n"
        properties:
          ProcedureTypeName:
              $ref: '#/components/schemas/Name'
          ProcedureType:
              enum:
                  -  Proceduretypevalues
              format: Proceduretype
    Servicetype:
        type: object
        format: Servicetype
        description: "A Classification value that distinguishes between the type of services in Trade Clearing Procedure \r\n"
        properties:
          ServiceTypeName:
              $ref: '#/components/schemas/Name'
          ServiceType:
              enum:
                  -  ITService
                  -  AdministrativeService
                  -  SystemService
                  -  FinancialService
                  -  InformationService
                  -  BusinessService
              format: Servicetype
    Bankingproducttype:
        type: object
        format: Bankingproducttype
        description: "A Classification value that distinguishes between the type of products/services related to Trade Clearing Procedure \r\n"
        properties:
          ProductTypeDefinition:
              type: string
              format: String
              description: ''
          ProductType:
              enum:
                  -  LoanProduct
                  -  CurrentAccountProduct
                  -  SavingAccountProduct
                  -  BrokeredProduct
                  -  TermDepositProduct
              format: Bankingproducttype
          ProductClassificationIssuingAuthority:
              type: string
              format: String
              description: ''
    BankingProduct:
        type: object
        format: BankingProduct
        description: >-
          Reference to the product or service that is related to Trade Clearing
          Procedure Product_x000D_

          Product
          (https://www.iso20022.org/standardsrepository/type/Product)StandardISO20022
          BM ()
        properties:
          ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
          ProductType:
              enum:
                  -  LoanProduct
                  -  CurrentAccountProduct
                  -  SavingAccountProduct
                  -  BrokeredProduct
                  -  TermDepositProduct
              format: BankingProduct
          ProductLifecycleStatus:
              $ref: '#/components/schemas/Productlifecyclestatus'
          ProductPriority:
              $ref: '#/components/schemas/Text'
          ProductDescription:
              $ref: '#/components/schemas/Text'
          ProductVersion:
              $ref: '#/components/schemas/Text'
          ProductName:
              $ref: '#/components/schemas/Name'
    Productidentification:
        type: object
        format: Productidentification
        description: 'The identifier of product e.g. ISIN Code. '
        properties:
          ProductIdentification:
              $ref: '#/components/schemas/Identifier'
          ProductIdentificationType:
              enum:
                  -  ISINCode
                  -  PackageCode
                  -  Buyersitemnumber
                  -  EAN
                  -  Harmonizedtariffcodename
                  -  Manufacturersitemnumber
                  -  Modelnumber
                  -  Partnumber
                  -  Quotacategory
                  -  Stylenumber
                  -  Suppliersitemnumber
                  -  Universalproductcode
              format: Productidentification
    Productlifecyclestatus:
        type: object
        format: Productlifecyclestatus
        description: >-
          Refers to the lifecycle of a product (e.g., initiated, announced,
          active, obsolete, withdrawn). 
        properties:
          ProductLifecycleStatus:
              $ref: '#/components/schemas/Status'
          ProductLifecycleStatusType:
              enum:
                  -  Initiated
                  -  Announced
                  -  Sold
                  -  Obsolete
                  -  Active
              format: Productlifecyclestatus
    Transactiontype:
        type: object
        format: Transactiontype
        description: "A Classification value that distinguishes between the type of transactions in Trade Clearing Procedure \r\n"
        properties:
          TransactionTypeName:
              $ref: '#/components/schemas/Name'
          TransactionType:
              enum:
                  -  FinancialTransaction
                  -  BusinessTransaction
                  -  BankingTransaction
                  -  AccountingTransaction
                  -  BookingTransaction
                  -  AllocationTransaction
                  -  DeliveryTransaction
                  -  ProductionTransaction
              format: Transactiontype
    Transaction:
        type: object
        format: Transaction
        description: "Reference to the transaction that is related to Trade Clearing Procedure \r\n"
        properties:
          TransactionIdentification:
              $ref: '#/components/schemas/Identifier'
          TransactionDate:
              $ref: '#/components/schemas/Transactiondate'
          TransactionType:
              enum:
                  -  FinancialTransaction
                  -  BusinessTransaction
                  -  BankingTransaction
                  -  AccountingTransaction
                  -  BookingTransaction
                  -  AllocationTransaction
                  -  DeliveryTransaction
                  -  ProductionTransaction
              format: Transaction
          TransactionDescription:
              $ref: '#/components/schemas/Text'
          TransactionStatus:
              $ref: '#/components/schemas/Transactionlifecyclestatus'
          TransactionName:
              $ref: '#/components/schemas/Name'
    Transactiondate:
        type: object
        format: Transactiondate
        description: >-
          The Date that the transaction has occurred or is planned to occur.

          A characteristic of transaction which refers to the LifecycleDate of
          transaction (e.g., initiated date, executed date, fulfillment date).  
        properties:
          TransactionDate:
              $ref: '#/components/schemas/Datetime'
          TransactionDateType:
              enum:
                  -  TransactionExecutedDate
                  -  TransactionFulfillmentDate
                  -  TransactionInitiatedDate
                  -  TransactionCancelledDate
                  -  TransactionApprovedDate
              format: Transactiondate
    Transactionlifecyclestatus:
        type: object
        format: Transactionlifecyclestatus
        description: >-
          A characteristic of transaction which refers to the LifecycleStatus of
          transaction (e.g., initiated, executed, confirmed, cancelled, etc.)  
        properties:
          TransactionLifecycleStatus:
              $ref: '#/components/schemas/Status'
          TransactionLifecycleStatusType:
              enum:
                  -  Initiated
                  -  Executed
                  -  Cancelled
                  -  Confirmed
                  -  Suspended
                  -  Pending
                  -  Completed
                  -  Notified
                  -  Booked
                  -  Rejected
              format: Transactionlifecyclestatus
    Arrangement:
        type: object
        format: Arrangement
        description: >-
          Reference to the Financial Transaction Arrangement that is related to
          Trade Clearing Procedure ObligationObligation
          (https://www.iso20022.org/standardsrepository/type/Obligation)StandardISO20022
          BM ()
        properties:
          ArrangementAction:
              $ref: '#/components/schemas/Action'
          ArrangementStartDate:
              $ref: '#/components/schemas/Datetime'
          ArrangementEndDate:
              $ref: '#/components/schemas/Datetime'
          ArrangementStatus:
              $ref: '#/components/schemas/Arrangementlifecyclestatus'
          ArrangementSubjectMatter:
              $ref: '#/components/schemas/Subject'
          Arrangementtype:
              enum:
                  -  SweepArrangement
                  -  WithdrawalArrangement
                  -  DepositArrangement
                  -  InterestArrangement
                  -  FeeArrangement
                  -  LienArrangement
                  -  InformationArrangement
                  -  PaymentArrangement
                  -  EntitlementArrangement
                  -  PeriodArrangement
                  -  CollateralArrangement
                  -  LimitArrangement
                  -  AccessArrangement
                  -  CardPaymentArrangement
                  -  StandingOrderArrangement
                  -  OverdraftArrangement
                  -  RepaymentArrangement
                  -  StatementArrangement
                  -  CreditTransferArrangement
                  -  ProductAndServiceArrangement
                  -  FactoringArrangement
                  -  RolloverArrangement
                  -  RestructuringArrangement
                  -  InsuranceArrangement
                  -  CollectionArrangement
                  -  UnderwritingArrangement
                  -  TerminationArrangement
                  -  MaturityArrangement
              format: Arrangement
    Action:
        type: object
        format: Action
        description: ' '
        properties:
          ActionType:
              enum:
                  -  Initiate
                  -  Execute
                  -  Create
                  -  Transfer
                  -  Pay
                  -  Deliver
                  -  Apply
                  -  Calculate
              format: Action
    Arrangementlifecyclestatus:
        type: object
        format: Arrangementlifecyclestatus
        description: >-
          A characteristic of arrangement which refers to the LifecycleStatus of
          arrangement (e.g., requested, proposed, offered, accepted, cancelled,
          terminated, fulfilled, etc.) 
        properties:
          ArrangementLifecycleStatus:
              $ref: '#/components/schemas/Status'
          ArrangementLifecycleStatusType:
              enum:
                  -  Requested
                  -  Proposed
                  -  Offered
                  -  Accepted
                  -  Cancelled
                  -  Fulfilled
                  -  Terminated
              format: Arrangementlifecyclestatus
    Subject:
        type: object
        format: Subject
        description: ' '
        properties:
          Subject:
              type: string
              format: Class
              description: >-
                A thing that is discussed or dealt whit in agreement/arrangement
                about doing or not doing (as action) something. 
    Agreement:
        type: object
        format: Agreement
        description: >-
          Reference to the Customer Agreement that is related to Trade Clearing
          Procedure Agreement_x000D_

          Agreement
          (https://www.iso20022.org/standardsrepository/type/Agreement)StandardISO20022
          BM ()
        properties:
          AgreementSignedDate:
              $ref: '#/components/schemas/Date'
          AgreementType:
              enum:
                  -  CustomerAgreement
                  -  SupplierAgreement
                  -  BrokerAgreement
                  -  SalesAgreement
                  -  PurchaseAgreement
                  -  MaintenanceAgreement
                  -  ProductAgreement
                  -  ProductSalesAgreement
                  -  ResourceAgreement
              format: Agreement
          AgreementValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
          AgreementVersion:
              $ref: '#/components/schemas/Text'
          AgreementStatus:
              $ref: '#/components/schemas/Agreementlifecyclestatus'
          AgreementSubjectMatter:
              $ref: '#/components/schemas/Text'
          AgreementIdentification:
              $ref: '#/components/schemas/Identifier'
          AgreementDate:
              $ref: '#/components/schemas/Datetime'
          AgreementDescription:
              $ref: '#/components/schemas/Text'
    Agreementlifecyclestatus:
        type: object
        format: Agreementlifecyclestatus
        description: >-
          A characteristic of agreement which refers to the LifecycleStatus of
          agreement (e.g., potential, offered, confirmed, completed, signed,
          terminated). 
        properties:
          AgreementLifecycleStatus:
              $ref: '#/components/schemas/Status'
          AgreementLifecycleStatusType:
              enum:
                  -  Offered
                  -  Confirmed
                  -  Completed
                  -  Signed
                  -  Terminated
                  -  Rejected
              format: Agreementlifecyclestatus
    TradeClearingProcedureNotify:
        type: object
        description: ''
        properties:
          TradeClearingProcedureParameterType:
              $ref: '#/components/schemas/Text'
          TradeClearingProcedureSelectedOption:
              $ref: '#/components/schemas/Feature'
          TradeClearingProcedureRequest:
              $ref: '#/components/schemas/Instruction'
          TradeClearingProcedureSchedule:
              $ref: '#/components/schemas/Schedule'
          TradeClearingProcedureStatus:
              $ref: '#/components/schemas/Status'
          TradeClearingProcedureAssociatedPartyReference:
              $ref: '#/components/schemas/Involvedparty'
          TradeClearingProcedureBusinessUnitReference:
              $ref: '#/components/schemas/Involvedparty'
          TradeClearingProcedureServiceProviderReference:
              $ref: '#/components/schemas/Involvedparty'
          TradeClearingProcedureFinancialFacilityReference:
              $ref: '#/components/schemas/FinancialFacility'
          TradeClearingProcedureEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
          TradeClearingProcedureCustomerReference:
              $ref: '#/components/schemas/Involvedparty'
          TradeClearingProcedureType:
              $ref: '#/components/schemas/Proceduretype'
          TradeClearingProcedureServiceProviderSchedule:
              $ref: '#/components/schemas/Schedule'
          TradeClearingProcedureServiceType:
              $ref: '#/components/schemas/Servicetype'
          TradeClearingProcedureProductandServiceType:
              $ref: '#/components/schemas/Bankingproducttype'
          TradeClearingProcedureProductandServiceInstance:
              $ref: '#/components/schemas/BankingProduct'
          TradeClearingProcedureTransactionType:
              $ref: '#/components/schemas/Transactiontype'
          TradeClearingProcedureFinancialTransactionArrangement:
              $ref: '#/components/schemas/Arrangement'
          TradeClearingProcedureCustomerAgreementReference:
              $ref: '#/components/schemas/Agreement'
          TradeClearingProcedureReference:
              $ref: '#/components/schemas/Procedure'
    MarketTradeConfirmationNotify:
        type: object
        description: ''
        properties:
          Preconditions:
              $ref: '#/components/schemas/Condition'
          BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
          Schedule:
              $ref: '#/components/schemas/Schedule'
          BusinessService:
              $ref: '#/components/schemas/BusinessService'
          Postconditions:
              $ref: '#/components/schemas/Condition'
          TradeClearingProcedureReference:
              $ref: '#/components/schemas/Procedure'
          MarketTradeConfirmationWorkstepReference:
              $ref: '#/components/schemas/Workstep'
          MarketTradeConfirmationWorkstepType:
              $ref: '#/components/schemas/Text'
    MarketTradeFundsandSecurityAvailabilityAssuranceNotify:
        type: object
        description: ''
        properties:
          Preconditions:
              $ref: '#/components/schemas/Condition'
          BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
          Schedule:
              $ref: '#/components/schemas/Schedule'
          BusinessService:
              $ref: '#/components/schemas/BusinessService'
          Postconditions:
              $ref: '#/components/schemas/Condition'
          TradeClearingProcedureReference:
              $ref: '#/components/schemas/Procedure'
          MarketTradeFundsandSecurityAvailabilityAssuranceWorkstepReference:
              $ref: '#/components/schemas/Workstep'
          MarketTradeFundsandSecurityAvailabilityAssuranceWorkstepType:
              $ref: '#/components/schemas/Text'
    MarketTradeMatchingNotify:
        type: object
        description: ''
        properties:
          Preconditions:
              $ref: '#/components/schemas/Condition'
          BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
          Schedule:
              $ref: '#/components/schemas/Schedule'
          BusinessService:
              $ref: '#/components/schemas/BusinessService'
          Postconditions:
              $ref: '#/components/schemas/Condition'
          TradeClearingProcedureReference:
              $ref: '#/components/schemas/Procedure'
          MarketTradeMatchingWorkstepReference:
              $ref: '#/components/schemas/Workstep'
          MarketTradeMatchingWorkstepType:
              $ref: '#/components/schemas/Text'
    MarketTradeOutTradeResolutionNotify:
        type: object
        description: ''
        properties:
          Preconditions:
              $ref: '#/components/schemas/Condition'
          BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
          Schedule:
              $ref: '#/components/schemas/Schedule'
          BusinessService:
              $ref: '#/components/schemas/BusinessService'
          Postconditions:
              $ref: '#/components/schemas/Condition'
          TradeClearingProcedureReference:
              $ref: '#/components/schemas/Procedure'
          MarketTradeOutTradeResolutionWorkstepReference:
              $ref: '#/components/schemas/Workstep'
          MarketTradeOutTradeResolutionWorkstepType:
              $ref: '#/components/schemas/Text'
    MarketTradeSettlementInitiationNotify:
        type: object
        description: ''
        properties:
          Preconditions:
              $ref: '#/components/schemas/Condition'
          BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
          Schedule:
              $ref: '#/components/schemas/Schedule'
          BusinessService:
              $ref: '#/components/schemas/BusinessService'
          Postconditions:
              $ref: '#/components/schemas/Condition'
          TradeClearingProcedureReference:
              $ref: '#/components/schemas/Procedure'
          MarketTradeSettlementInitiationWorkstepReference:
              $ref: '#/components/schemas/Workstep'
          MarketTradeSettlementInitiationWorkstepType:
              $ref: '#/components/schemas/Text'
