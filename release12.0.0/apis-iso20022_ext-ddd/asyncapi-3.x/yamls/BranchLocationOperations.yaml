asyncapi: 2.6.0
info:
  title: Branch Location Operations
  description: >-
    BIAN Service Domain (expanded with the BIAN BOM) | The day to day
    administration of branch activity, including teller assignment and cash
    handling oversight
  version: 12.0.3
channels:
  BranchLocationAdministrativePlan/Created:
      description: ''
      publish:
        operationId: BranchLocationAdministrativePlan-created
        summary: BranchLocationAdministrativePlan
        message:
          $ref: '#/components/messages/BranchLocationAdministrativePlan'
  BranchLocationAdministrativePlan/Updated:
      description: ''
      publish:
        operationId: BranchLocationAdministrativePlan-updated
        summary: BranchLocationAdministrativePlan
        message:
          $ref: '#/components/messages/BranchLocationAdministrativePlan'
  Non-cashInventoryHandling/Created:
      description: ''
      publish:
        summary: Non-cashInventoryHandling
        message:
          $ref: '#/components/messages/NoncashInventoryHandling'
  Non-cashInventoryHandling/Updated:
      description: ''
      publish:
        summary: Non-cashInventoryHandling
        message:
          $ref: '#/components/messages/NoncashInventoryHandling'
  LocationSecurityAdministration/Created:
      description: ''
      publish:
        summary: LocationSecurityAdministration
        message:
          $ref: '#/components/messages/LocationSecurityAdministration'
  LocationSecurityAdministration/Updated:
      description: ''
      publish:
        summary: LocationSecurityAdministration
        message:
          $ref: '#/components/messages/LocationSecurityAdministration'
  StaffAssignment/Created:
      description: ''
      publish:
        summary: StaffAssignment
        message:
          $ref: '#/components/messages/StaffAssignment'
  StaffAssignment/Updated:
      description: ''
      publish:
        summary: StaffAssignment
        message:
          $ref: '#/components/messages/StaffAssignment'
  WorkforceAdministration/Created:
      description: ''
      publish:
        summary: WorkforceAdministration
        message:
          $ref: '#/components/messages/WorkforceAdministration'
  WorkforceAdministration/Updated:
      description: ''
      publish:
        summary: WorkforceAdministration
        message:
          $ref: '#/components/messages/WorkforceAdministration'
  SafeCustodyOperations/Created:
      description: ''
      publish:
        summary: SafeCustodyOperations
        message:
          $ref: '#/components/messages/SafeCustodyOperations'
  SafeCustodyOperations/Updated:
      description: ''
      publish:
        summary: SafeCustodyOperations
        message:
          $ref: '#/components/messages/SafeCustodyOperations'
  CashInventoryHandling/Created:
      description: ''
      publish:
        summary: CashInventoryHandling
        message:
          $ref: '#/components/messages/CashInventoryHandling'
  CashInventoryHandling/Updated:
      description: ''
      publish:
        summary: CashInventoryHandling
        message:
          $ref: '#/components/messages/CashInventoryHandling'
  BranchLocationOperationsOutcome/Created:
      description: ''
      publish:
        summary: BranchLocationOperationsOutcome
        message:
          $ref: '#/components/messages/BranchLocationOperationsOutcome'
  BranchLocationOperationsOutcome/Updated:
      description: ''
      publish:
        summary: BranchLocationOperationsOutcome
        message:
          $ref: '#/components/messages/BranchLocationOperationsOutcome'
  BranchLocationAdministrativePlan/Notify:
      subscribe:
        message:
          $ref: '#/components/messages/BranchLocationAdministrativePlanNotify'
components:
  messages:
    BranchLocationAdministrativePlan:
        name: BranchLocationAdministrativePlan
        description: >-
          Handle and assign the day to day activities, capture time, costs and
          income for an operational unit within Branch Location Operations. 
        payload:
          $ref: '#/components/schemas/BranchLocationAdministrativePlan'
    Non-cashInventoryHandling:
        name: Non-cashInventoryHandling
        description: >
          The Non-cash Inventory Handling is an activity that is performed as
          one aspect of carrying out the Branch Location Administration Plan
        payload:
          $ref: '#/components/schemas/Non-cashInventoryHandling'
    LocationSecurityAdministration:
        name: LocationSecurityAdministration
        description: >
          The Non-cash Inventory Handling is an activity that is performed as
          one aspect of carrying out the Branch Location Administration Plan
        payload:
          $ref: '#/components/schemas/LocationSecurityAdministration'
    StaffAssignment:
        name: StaffAssignment
        description: >
          The Non-cash Inventory Handling is an activity that is performed as
          one aspect of carrying out the Branch Location Administration Plan
        payload:
          $ref: '#/components/schemas/StaffAssignment'
    WorkforceAdministration:
        name: WorkforceAdministration
        description: >
          The Non-cash Inventory Handling is an activity that is performed as
          one aspect of carrying out the Branch Location Administration Plan
        payload:
          $ref: '#/components/schemas/WorkforceAdministration'
    SafeCustodyOperations:
        name: SafeCustodyOperations
        description: >
          The Non-cash Inventory Handling is an activity that is performed as
          one aspect of carrying out the Branch Location Administration Plan
        payload:
          $ref: '#/components/schemas/SafeCustodyOperations'
    CashInventoryHandling:
        name: CashInventoryHandling
        description: >
          The Non-cash Inventory Handling is an activity that is performed as
          one aspect of carrying out the Branch Location Administration Plan
        payload:
          $ref: '#/components/schemas/CashInventoryHandling'
    BranchLocationOperationsOutcome:
        name: BranchLocationOperationsOutcome
        description: >
          The Non-cash Inventory Handling is an activity that is performed as
          one aspect of carrying out the Branch Location Administration Plan
        payload:
          $ref: '#/components/schemas/BranchLocationOperationsOutcome'
    BranchLocationAdministrativePlanNotify:
        name: BranchLocationAdministrativePlanNotify
        payload:
          $ref: '#/components/schemas/BranchLocationAdministrativePlanNotify'
  schemas:
    Non-cashInventoryHandling:
        type: object
        description: ''
        properties:
          Preconditions:
              $ref: '#/components/schemas/Condition'
          BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
          Schedule:
              $ref: '#/components/schemas/Schedule'
          BusinessService:
              $ref: '#/components/schemas/BusinessService'
          Postconditions:
              $ref: '#/components/schemas/Condition'
          BranchLocationAdministrativePlanReference:
              $ref: '#/components/schemas/Plan'
          Non-cashInventoryHandlingReference:
              $ref: '#/components/schemas/PlannedAction'
          Non-cashInventoryHandlingType:
              $ref: '#/components/schemas/Text'
    Condition:
        type: object
        format: Condition
        description: "The completion status once the routine has been completed (note the need to fulfill a routine may recur frequently) \r\n"
        properties:
          Condition:
              type: string
              format: Class
              description: >-
                Condition is a premise upon which the fulfillment of an
                agreement depends 


                General and special arrangements, provisions, requirements,
                rules, specifications, and standards that form an integral part
                of an agreement or contract.


                Read more:
                http://www.businessdictionary.com/definition/terms-and-conditions.html

                 
    Involvedparty:
        type: object
        format: Involvedparty
        description: 'Entity that assigns and manages the identification. '
        properties:
          PartyReference:
              $ref: '#/components/schemas/Party'
          Involvedparty:
              type: string
              format: DataType
              description: 'Party who plays a specific role  '
          PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
    Party:
        type: object
        format: Party
        description: ' '
        properties:
          PartyName:
              $ref: '#/components/schemas/Name'
          PartyType:
              enum:
                  -  Person
                  -  Organisation
              format: Party
          PartyDateTime:
              $ref: '#/components/schemas/Datetime'
          PartyIdentification:
              $ref: '#/components/schemas/Partyidentification'
          PartyLegalStructureType:
              enum:
                  -  Individual
                  -  CommunityInterestCompany
                  -  Co-Operative
                  -  Charity
                  -  GeneralPartnership
                  -  LimitedLiabilityPartnership
                  -  ScottishLimitedPartnership
                  -  LimitedPartnership
                  -  PrivateLimitedCompany
                  -  PublicLimitedCompany
                  -  Sole(SoleTrader)
              format: Party
    Name:
        type: object
        format: Name
        description: ' '
        properties:
          Name:
              type: string
              format: DataType
              description: >-
                A name is a word or phrase that constitutes the distinctive
                designation of a person, place, thing or concept. (UN/CEFAT) 
    Datetime:
        type: object
        format: Datetime
        description: 'Date and time at which the range ends. (ISO20022) '
        properties:
          DateTimeContent:
              type: string
              format: String
              description: ''
          TimeZoneCode:
              type: string
              format: String
              description: ''
          DaylightSavingIndicator:
              type: string
              format: String
              description: ''
          Datetime:
              type: string
              format: DataType
              description: >-
                A date time identifies a date and time of day to various common
                resolutions: year, month, week, day, hour, minute, second, and
                fraction of second. (UN/CEFACT)


                A particular point in the progression of time defined by a
                mandatory date and a mandatory time component, expressed in
                either UTC time format (YYYY-MM-DDThh:mm:ss.sssZ), local time
                with UTC offset format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or
                local time format (YYYY-MM-DDThh:mm:ss.sss). These
                representations are defined in "XML Schema Part 2: Datatypes
                Second Edition W3C Recommendation 28 October 2004" which is
                aligned with ISO 8601. (ISO20022)

                Note on the time format:

                1) beginning / end of calendar day

                00:00:00  -  the beginning of a calendar day

                24:00:00  -  the end of a calendar day

                2) fractions of second in time format

                Decimal fractions of seconds may be included. In this case, the
                involved parties shall agree on the maximum number of digits
                that are allowed. 
    Partyidentification:
        type: object
        format: Partyidentification
        description: ' '
        properties:
          PartyIdentificationType:
              enum:
                  -  Taxidentificationnumber
                  -  Nationalregistrationnumber
                  -  LEI(LegalEntityIdentifier)
                  -  Alienregistrationnumber
                  -  Passportnumber
                  -  Corporateidentification
                  -  Driverlicensenumber
                  -  Socialsecuritynumber
                  -  Identitycardnumber
                  -  Concat
              format: Partyidentification
          PartyIdentification:
              $ref: '#/components/schemas/Identifier'
          Partyidentification:
              type: string
              format: DataType
              description: ''
    Identifier:
        type: object
        format: Identifier
        description: ' '
        properties:
          IdentifierValue:
              $ref: '#/components/schemas/Value'
          IdentifierIssuingAuthority:
              $ref: '#/components/schemas/Involvedparty'
          IdentifierStartDate:
              $ref: '#/components/schemas/Datetime'
          IdentifierEndDate:
              $ref: '#/components/schemas/Datetime'
    Value:
        type: object
        format: Value
        description: ' '
        properties:
          Value:
              type: string
              format: DataType
              description: >-
                Data or set of data 


                A value is the concept of worth in general that is assigned or
                is determined by measurement, assessment or calculation.
                (UN/CEFACT) 
    Partyrole:
        type: object
        format: Partyrole
        description: ' '
        properties:
          PartyRoleType:
              $ref: '#/components/schemas/Text'
          PartyRoleName:
              $ref: '#/components/schemas/Name'
          PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
          PartyInvolvementType:
              enum:
                  -  Agreementinvolvement
                  -  Partyinvolvement
                  -  Arrangementinvolvement
                  -  Relationshipinvolvement
                  -  Locationinvolvement
                  -  Bankguaranteeinvolvement
              format: Partyrole
    Text:
        type: object
        format: Text
        description: "The type of Non-cash Inventory Handling \r\n"
        properties:
          Text:
              type: string
              format: DataType
              description: >-
                Text is a character string such as a finite set of characters
                generally in the form of words of a language. (UN/CEFACT) 
    Datetimeperiod:
        type: object
        format: Datetimeperiod
        description: ' '
        properties:
          FromDateTime:
              $ref: '#/components/schemas/Datetime'
          ToDateTime:
              $ref: '#/components/schemas/Datetime'
          Datetimeperiod:
              type: string
              format: DataType
              description: >-
                Time span defined by a start date and time, and an end date and
                time. (ISO20022) 
    Schedule:
        type: object
        format: Schedule
        description: "The timing and key actions/milestones involved in completing the routine \r\n"
        properties:
          ScheduleType:
              type: string
              format: String
              description: ''
    BusinessService:
        type: object
        format: BusinessService
        description: "The <BQ> specific Business Service \r\n"
        properties:
          BusinessServiceType:
              enum:
                  -  Businessservicetypevalues
              format: BusinessService
    Plan:
        type: object
        format: Plan
        description: "Reference to Branch Location Administrative Plan \r\n"
        properties:
          PlanGoal:
              $ref: '#/components/schemas/Goal'
          PlanBudget:
              $ref: '#/components/schemas/Budgetarrangement'
          PlannedAction:
              $ref: '#/components/schemas/Plannedaction'
          PlanType:
              $ref: '#/components/schemas/Plantype'
          PlanOrganisation:
              type: string
              format: String
              description: ''
          PlanValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
          PlanDescription:
              $ref: '#/components/schemas/Text'
    Goal:
        type: object
        format: Goal
        description: ' '
        properties:
          GoalType:
              type: string
              format: String
              description: 'The type of goal '
          GoalDefinition:
              type: string
              format: String
              description: >-
                A definition of the goal, including the intended actions
                required to achieve the goal 
          GoalOrganisation:
              type: string
              format: ''
              description: >-
                Identifies the interested parties and their roles and
                responsibilities for the specific actions supporting the
                achievement of the goal 
          GoalResult:
              type: string
              format: String
              description: >-
                Assessment of how the work is progressing towards achieving the
                goal, including projections of likely outcomes 
          Goal:
              type: string
              format: Class
              description: >-
                A goal represents a high-level statement of intent, direction,
                or desired end state for an organization and its stakeholders.
                (ArchiMate 3.1)


                An observable and measurable end result having one or more
                objectives to be achieved within a more or less fixed timeframe.


                Read more:
                http://www.businessdictionary.com/definition/goal.html 
    Budgetarrangement:
        type: object
        format: Budgetarrangement
        description: >-
          An arrangement which is specifying an estimate of costs, revenues, and
          resources over a specified period, reflecting a reading of future
          financial conditions and goals. (adapted from Business Dictionary) 
        properties:
          BudgetType:
              $ref: '#/components/schemas/Budgettype'
          BudgetAmount:
              $ref: '#/components/schemas/Amount'
          BudgetArrangement:
              type: string
              format: Class
              description: >-
                An arrangement which is specifying an estimate of costs,
                revenues, and resources over a specified period, reflecting a
                reading of future financial conditions and goals. (adapted from
                Business Dictionary)


                Read more:
                http://www.businessdictionary.com/definition/budget.html



                A budget is an estimation of revenue and expenses over a
                specified future period of time and is utilized by governments,
                businesses, and individuals.

                A budget is basically a financial plan for a defined period,
                normally a year that is known to greatly enhance the success of
                any financial undertaking. (Investopedia)


                https://www.investopedia.com/terms/b/budget.asp 
    Budgettype:
        type: object
        format: Budgettype
        description: 'A Classification value that specifies the type of Budget '
        properties:
          BudgetTypeName:
              $ref: '#/components/schemas/Name'
          BudgetType:
              enum:
                  -  OperatingBudget
                  -  FinancialBudget
                  -  ResourceBudget
              format: Budgettype
    Amount:
        type: object
        format: Amount
        description: ' '
        properties:
          AmountValue:
              $ref: '#/components/schemas/Value'
          AmountCurrency:
              $ref: '#/components/schemas/Currencycode'
          DecimalPointPosition:
              type: string
              format: String
              description: 
                Decimal point position starts calulating from the right
                 
          AmountType:
              enum:
                  -  Principal
                  -  Actual
                  -  Estimated
                  -  Maximum
                  -  Default
                  -  Replacement
                  -  Incremental
                  -  Decremental
                  -  Reserved
                  -  Available
                  -  Used
              format: Amount
    Currencycode:
        type: object
        format: Currencycode
        description: ' '
        properties:
          Currencycode:
              type: string
              format: DataType
              description: >-
                A code identifying a currency according to ISO-4217.

                A currency is a system of money in general use in a particular
                country.


                Code allocated to a currency, by a maintenance agency, under an
                international identification scheme as described in the latest
                edition of the international standard ISO 4217 "Codes for the
                representation of currencies and funds". Valid currency codes
                are registered with the ISO 4217 Maintenance Agency, and consist
                of three contiguous letters. (ISO20022)

                 
    Plannedaction:
        type: object
        format: Plannedaction
        description: >-
          An action that is arranged in a plan for doing or achieving
          something  
        properties:
          PlannedAction:
              type: string
              format: Class
              description: >-
                An action that is arranged in a plan for doing or achieving
                something  
    Plantype:
        type: object
        format: Plantype
        description: 'A Classification value that specifies the type of Plan '
        properties:
          PlanTypeName:
              $ref: '#/components/schemas/Name'
          PlanType:
              enum:
                  -  AdministrativePlan
                  -  ManagementPlan
                  -  StratgyPlan
                  -  FinancialPlan
              format: Plantype
          Plantype:
              type: string
              format: DataType
              description: 'Data type specifies the classification of a Plan  '
    PlannedAction:
        type: object
        format: PlannedAction
        description: "Reference to the Non-cash Inventory Handling \r\n"
        properties:
          PlannedAction:
              type: string
              format: Class
              description: >-
                An action that is arranged in a plan for doing or achieving
                something  
    LocationSecurityAdministration:
        type: object
        description: ''
        properties:
          Preconditions:
              $ref: '#/components/schemas/Condition'
          BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
          Schedule:
              $ref: '#/components/schemas/Schedule'
          BusinessService:
              $ref: '#/components/schemas/BusinessService'
          Postconditions:
              $ref: '#/components/schemas/Condition'
          BranchLocationAdministrativePlanReference:
              $ref: '#/components/schemas/Plan'
          LocationSecurityAdministrationReference:
              $ref: '#/components/schemas/PlannedAction'
          LocationSecurityAdministrationType:
              $ref: '#/components/schemas/Text'
    StaffAssignment:
        type: object
        description: ''
        properties:
          Preconditions:
              $ref: '#/components/schemas/Condition'
          BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
          Schedule:
              $ref: '#/components/schemas/Schedule'
          BusinessService:
              $ref: '#/components/schemas/BusinessService'
          Postconditions:
              $ref: '#/components/schemas/Condition'
          BranchLocationAdministrativePlanReference:
              $ref: '#/components/schemas/Plan'
          StaffAssignmentReference:
              $ref: '#/components/schemas/PlannedAction'
          StaffAssignmentType:
              $ref: '#/components/schemas/Text'
    WorkforceAdministration:
        type: object
        description: ''
        properties:
          Preconditions:
              $ref: '#/components/schemas/Condition'
          BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
          Schedule:
              $ref: '#/components/schemas/Schedule'
          BusinessService:
              $ref: '#/components/schemas/BusinessService'
          Postconditions:
              $ref: '#/components/schemas/Condition'
          BranchLocationAdministrativePlanReference:
              $ref: '#/components/schemas/Plan'
          WorkforceAdministrationReference:
              $ref: '#/components/schemas/PlannedAction'
          WorkforceAdministrationType:
              $ref: '#/components/schemas/Text'
    SafeCustodyOperations:
        type: object
        description: ''
        properties:
          Preconditions:
              $ref: '#/components/schemas/Condition'
          BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
          Schedule:
              $ref: '#/components/schemas/Schedule'
          BusinessService:
              $ref: '#/components/schemas/BusinessService'
          Postconditions:
              $ref: '#/components/schemas/Condition'
          BranchLocationAdministrativePlanReference:
              $ref: '#/components/schemas/Plan'
          SafeCustodyOperationsReference:
              $ref: '#/components/schemas/PlannedAction'
          SafeCustodyOperationsType:
              $ref: '#/components/schemas/Text'
    CashInventoryHandling:
        type: object
        description: ''
        properties:
          Preconditions:
              $ref: '#/components/schemas/Condition'
          BusinessUnitEmployeeReference:
              $ref: '#/components/schemas/Involvedparty'
          Schedule:
              $ref: '#/components/schemas/Schedule'
          BusinessService:
              $ref: '#/components/schemas/BusinessService'
          Postconditions:
              $ref: '#/components/schemas/Condition'
          BranchLocationAdministrationPlanReference:
              $ref: '#/components/schemas/Plan'
          CashInventoryHandlingReference:
              $ref: '#/components/schemas/PlannedAction'
          CashInventoryHandlingType:
              $ref: '#/components/schemas/Text'
    BranchLocationOperationsOutcome:
        type: object
        description: ''
        properties:
          BranchLocationOperationsPerformanceAnalysis:
              $ref: '#/components/schemas/Analysis'
          BranchLocationOperationsActivityAnalysis:
              $ref: '#/components/schemas/Analysis'
          BranchLocationOperationsAdministrativePlan:
              $ref: '#/components/schemas/Plan'
          BranchLocationOperationsAdministrationTask:
              $ref: '#/components/schemas/Arrangement'
    Analysis:
        type: object
        format: Analysis
        description: " \r\n"
        properties:
          AnalysisType:
              enum:
                  -  PerformanceAnalysis
                  -  ActivityAnalysis
              format: Analysis
          AnalysisResult:
              $ref: '#/components/schemas/Text'
          AnalysisPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
          AnalysisDocument:
              $ref: '#/components/schemas/Document'
          AnalysisDateTime:
              $ref: '#/components/schemas/Datetime'
          AnalysisSpecification:
              $ref: '#/components/schemas/Text'
    Document:
        type: object
        format: Document
        description: ' '
        properties:
          DocumentIdentification:
              $ref: '#/components/schemas/Identifier'
          DocumentVersion:
              type: string
              format: Number
              description: ''
          DocumentType:
              enum:
                  -  Meteredserviceinvoice
                  -  Commercialinvoice
                  -  Creditnote
                  -  Debitnote
                  -  Hireinvoice
                  -  Selfbilledinvoice
                  -  Remittanceadvicemessage
                  -  Relatedpaymentinstruction
                  -  Commercialcontract
                  -  Foreignexchangedealreference
                  -  Statementofaccount
                  -  Dispatchadvice
                  -  Purchaseorder
                  -  Billoflading
                  -  Voucher
                  -  Accountreceivableopenitem
                  -  Cashierreceipt
                  -  Customerreceipt
                  -  Journal
                  -  Salereceipt
              format: Document
          DocumentStatus:
              $ref: '#/components/schemas/Status'
          DocumentDateTime:
              $ref: '#/components/schemas/Datetime'
          DocumentName:
              $ref: '#/components/schemas/Name'
          DocumentDateTimeType:
              enum:
                  -  CreationDate
                  -  CapturingDate
                  -  VersionDate
                  -  ValueDate
                  -  IssueDate
              format: Document
          DocumentPurpose:
              $ref: '#/components/schemas/Text'
          DocumentFormat:
              $ref: '#/components/schemas/Text'
          DocumentSubject:
              $ref: '#/components/schemas/Text'
          DocumentDescription:
              $ref: '#/components/schemas/Text'
          DocumentValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
    Status:
        type: object
        format: Status
        description: ' '
        properties:
          StatusReason:
              $ref: '#/components/schemas/Text'
          StatusDateTime:
              $ref: '#/components/schemas/Datetime'
          StatusValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
          StatusInvolvedParty:
              $ref: '#/components/schemas/Involvedparty'
          Status:
              type: string
              format: DataType
              description: >-
                A characteristic that describe the object by referring to a
                state transition in its lifecycle. 
    Arrangement:
        type: object
        format: Arrangement
        description: ' ObligationObligation (https://www.iso20022.org/standardsrepository/type/Obligation)StandardISO20022 BM ()'
        properties:
          ArrangementAction:
              $ref: '#/components/schemas/Action'
          ArrangementStartDate:
              $ref: '#/components/schemas/Datetime'
          ArrangementEndDate:
              $ref: '#/components/schemas/Datetime'
          ArrangementStatus:
              $ref: '#/components/schemas/Arrangementlifecyclestatus'
          ArrangementSubjectMatter:
              $ref: '#/components/schemas/Subject'
          Arrangementtype:
              enum:
                  -  SweepArrangement
                  -  WithdrawalArrangement
                  -  DepositArrangement
                  -  InterestArrangement
                  -  FeeArrangement
                  -  LienArrangement
                  -  InformationArrangement
                  -  PaymentArrangement
                  -  EntitlementArrangement
                  -  PeriodArrangement
                  -  CollateralArrangement
                  -  LimitArrangement
                  -  AccessArrangement
                  -  CardPaymentArrangement
                  -  StandingOrderArrangement
                  -  OverdraftArrangement
                  -  RepaymentArrangement
                  -  StatementArrangement
                  -  CreditTransferArrangement
                  -  ProductAndServiceArrangement
                  -  FactoringArrangement
                  -  RolloverArrangement
                  -  RestructuringArrangement
                  -  InsuranceArrangement
                  -  CollectionArrangement
                  -  UnderwritingArrangement
                  -  TerminationArrangement
                  -  MaturityArrangement
              format: Arrangement
    Action:
        type: object
        format: Action
        description: ' '
        properties:
          ActionType:
              enum:
                  -  Initiate
                  -  Execute
                  -  Create
                  -  Transfer
                  -  Pay
                  -  Deliver
                  -  Apply
                  -  Calculate
              format: Action
    Arrangementlifecyclestatus:
        type: object
        format: Arrangementlifecyclestatus
        description: >-
          A characteristic of arrangement which refers to the LifecycleStatus of
          arrangement (e.g., requested, proposed, offered, accepted, cancelled,
          terminated, fulfilled, etc.) 
        properties:
          ArrangementLifecycleStatus:
              $ref: '#/components/schemas/Status'
          ArrangementLifecycleStatusType:
              enum:
                  -  Requested
                  -  Proposed
                  -  Offered
                  -  Accepted
                  -  Cancelled
                  -  Fulfilled
                  -  Terminated
              format: Arrangementlifecyclestatus
    Subject:
        type: object
        format: Subject
        description: ' '
        properties:
          Subject:
              type: string
              format: Class
              description: >-
                A thing that is discussed or dealt whit in agreement/arrangement
                about doing or not doing (as action) something. 
    BranchLocationAdministrativePlan:
        type: object
        description: ''
        properties:
          BranchLocationAdministrativePlanBudgetType:
              $ref: '#/components/schemas/Budgettype'
          BranchLocationAdministrativePlanBudget:
              $ref: '#/components/schemas/Amount'
          BranchLocationAdministrativePlanAssignment:
              $ref: '#/components/schemas/Assignment'
          BranchLocationAdministrativePlanDuty:
              $ref: '#/components/schemas/Arrangement'
          BranchLocationAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/Involvedparty'
          BranchLocationAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/Accountbalance'
          BranchLocationAdministrativePlanSubjectMatter:
              $ref: '#/components/schemas/BranchLocation'
          BranchLocationAdministrativePlanType:
              $ref: '#/components/schemas/Plantype'
          BranchLocationAdministrativePlanReference:
              $ref: '#/components/schemas/Plan'
          BranchLocationAdministrativePlanDescription:
              $ref: '#/components/schemas/Text'
    Assignment:
        type: object
        format: Assignment
        description: "The assignment of a required activity to a responsibe party in Branch Location Administrative Plan \r\n"
        properties:
          PartyReference:
              $ref: '#/components/schemas/Party'
          PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
          SubjectMatter:
              type: string
              format: Object
              description: ''
    Accountbalance:
        type: object
        format: Accountbalance
        description: >-
          Balance of budget which is arranged whitin Branch Location
          Administrative Plan BalanceBalance
          (https://www.iso20022.org/standardsrepository/type/Balance)StandardISO20022
          BM ()
        properties:
          BalanceAmount:
              $ref: '#/components/schemas/Amount'
          BalanceType:
              enum:
                  -  Openingbalance
                  -  Closingbalance
                  -  Currentbalance
                  -  Availablebalance
                  -  Ledgerbalance
                  -  Reservebalance
                  -  Freebalance
                  -  Principalbalance
              format: Accountbalance
          BalanceDate:
              $ref: '#/components/schemas/Datetime'
          BalanceIndicator:
              enum:
                  -  Debit
                  -  Credit
              format: Accountbalance
    BranchLocation:
        type: object
        format: BranchLocation
        description: "The subject matter of Branch Location Administrative Plan \r\n"
        properties:
          BranchReference:
              $ref: '#/components/schemas/Branch'
          LocationReference:
              $ref: '#/components/schemas/Location'
    Branch:
        type: object
        format: Branch
        description: ' '
        properties:
          BranchIdentification:
              $ref: '#/components/schemas/Identifier'
          BranchLegalEntityIdentification:
              $ref: '#/components/schemas/Identifier'
          BranchAddress:
              $ref: '#/components/schemas/Address'
          BranchName:
              $ref: '#/components/schemas/Name'
    Address:
        type: object
        format: Address
        description: ' '
        properties:
          AddressType:
              enum:
                  -  PostalAddress
                  -  GeolocationAddress
                  -  LatitudeAddress
                  -  LongitudeAddress
                  -  ElectronicAddress
              format: Address
          LocationReference:
              $ref: '#/components/schemas/Location'
          Address:
              type: string
              format: Class
              description: >-
                A specific designation or description of a location, typically
                used for specifying the location or destination of something or
                someone 
    Location:
        type: object
        format: Location
        description: ' '
        properties:
          LocationDescription:
              $ref: '#/components/schemas/Text'
          LocationDateTime:
              $ref: '#/components/schemas/Datetime'
          LocationStatus:
              $ref: '#/components/schemas/Status'
          LocationType:
              enum:
                  -  Continent
                  -  Country
                  -  State
                  -  District
                  -  Province
                  -  Town
                  -  City
                  -  Region
              format: Location
          LocationZoningType:
              $ref: '#/components/schemas/Text'
          LocationNeighborhoodType:
              $ref: '#/components/schemas/Text'
          LocationConstructionType:
              $ref: '#/components/schemas/Text'
          LocationOccupancyType:
              $ref: '#/components/schemas/Text'
          LocationValue:
              $ref: '#/components/schemas/Value'
          LocationCapacity:
              $ref: '#/components/schemas/Text'
          LocationIdentification:
              $ref: '#/components/schemas/Identifier'
          LocationAddress:
              $ref: '#/components/schemas/Address'
          LocationName:
              $ref: '#/components/schemas/Name'
          LocationTimeZone:
              $ref: '#/components/schemas/Text'
          Location:
              type: string
              format: Class
              description: >-
                The definition of an addressable space/position both in real and
                virtual environments with associated uses and entitlements 
    BranchLocationAdministrativePlanNotify:
        type: object
        description: ''
        properties:
          BranchLocationAdministrativePlanBudgetType:
              $ref: '#/components/schemas/Budgettype'
          BranchLocationAdministrativePlanAssignment:
              $ref: '#/components/schemas/Assignment'
          BranchLocationAdministrativePlanDuty:
              $ref: '#/components/schemas/Arrangement'
          BranchLocationAdministrativePlanAssociatedParty:
              $ref: '#/components/schemas/Involvedparty'
          BranchLocationAdministrativePlanBudgetBalance:
              $ref: '#/components/schemas/Accountbalance'
          BranchLocationAdministrativePlanSubjectMatter:
              $ref: '#/components/schemas/BranchLocation'
          BranchLocationAdministrativePlanType:
              $ref: '#/components/schemas/Plantype'
          BranchLocationAdministrativePlanReference:
              $ref: '#/components/schemas/Plan'
          BranchLocationAdministrativePlanDescription:
              $ref: '#/components/schemas/Text'
